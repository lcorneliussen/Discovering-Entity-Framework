//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("PeopleModel", "AllPeopleAllPeopleCars", "AllPeople", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Braindrops.DiscoveringEF.Person), "AllPeopleCars", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Braindrops.DiscoveringEF.Car))]

// Original file name:
// Generation date: 09.09.2009 00:32:43
namespace Braindrops.DiscoveringEF
{
    
    /// <summary>
    /// There are no comments for PeopleModelConnection in the schema.
    /// </summary>
    public partial class PeopleModelConnection : global::System.Data.Objects.ObjectContext
    {
        /// <summary>
        /// Initializes a new PeopleModelConnection object using the connection string found in the 'PeopleModelConnection' section of the application configuration file.
        /// </summary>
        public PeopleModelConnection() : 
                base("name=PeopleModelConnection", "PeopleModelConnection")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new PeopleModelConnection object.
        /// </summary>
        public PeopleModelConnection(string connectionString) : 
                base(connectionString, "PeopleModelConnection")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new PeopleModelConnection object.
        /// </summary>
        public PeopleModelConnection(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "PeopleModelConnection")
        {
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for AllPeople in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Person> AllPeople
        {
            get
            {
                if ((this._AllPeople == null))
                {
                    this._AllPeople = base.CreateQuery<Person>("[AllPeople]");
                }
                return this._AllPeople;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Person> _AllPeople;
        /// <summary>
        /// There are no comments for AllCars in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Car> AllCars
        {
            get
            {
                if ((this._AllCars == null))
                {
                    this._AllCars = base.CreateQuery<Car>("[AllCars]");
                }
                return this._AllCars;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Car> _AllCars;
        /// <summary>
        /// There are no comments for AllPeople in the schema.
        /// </summary>
        public void AddToAllPeople(Person person)
        {
            base.AddObject("AllPeople", person);
        }
        /// <summary>
        /// There are no comments for AllCars in the schema.
        /// </summary>
        public void AddToAllCars(Car car)
        {
            base.AddObject("AllCars", car);
        }
    }
    /// <summary>
    /// There are no comments for PeopleModel.Person in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="PeopleModel", Name="Person")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Person : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="age">Initial value of Age.</param>
        public static Person CreatePerson(global::System.Guid id, string name, int age)
        {
            Person person = new Person();
            person.Id = id;
            person.Name = name;
            person.Age = age;
            return person;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Age in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int Age
        {
            get
            {
                return this._Age;
            }
            set
            {
                this.OnAgeChanging(value);
                this.ReportPropertyChanging("Age");
                this._Age = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Age");
                this.OnAgeChanged();
            }
        }
        private int _Age;
        partial void OnAgeChanging(int value);
        partial void OnAgeChanged();
        /// <summary>
        /// There are no comments for Cars in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("PeopleModel", "AllPeopleAllPeopleCars", "AllPeopleCars")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Car> Cars
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Car>("PeopleModel.AllPeopleAllPeopleCars", "AllPeopleCars");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Car>("PeopleModel.AllPeopleAllPeopleCars", "AllPeopleCars", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for PeopleModel.Car in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="PeopleModel", Name="Car")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Car : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Car object.
        /// </summary>
        /// <param name="model">Initial value of Model.</param>
        /// <param name="id">Initial value of Id.</param>
        public static Car CreateCar(string model, global::System.Guid id)
        {
            Car car = new Car();
            car.Model = model;
            car.Id = id;
            return car;
        }
        /// <summary>
        /// There are no comments for Property Model in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Model
        {
            get
            {
                return this._Model;
            }
            set
            {
                this.OnModelChanging(value);
                this.ReportPropertyChanging("Model");
                this._Model = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Model");
                this.OnModelChanged();
            }
        }
        private string _Model;
        partial void OnModelChanging(string value);
        partial void OnModelChanged();
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Person in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("PeopleModel", "AllPeopleAllPeopleCars", "AllPeople")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Person Person
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Person>("PeopleModel.AllPeopleAllPeopleCars", "AllPeople").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Person>("PeopleModel.AllPeopleAllPeopleCars", "AllPeople").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Person in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Person> PersonReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Person>("PeopleModel.AllPeopleAllPeopleCars", "AllPeople");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Person>("PeopleModel.AllPeopleAllPeopleCars", "AllPeople", value);
                }
            }
        }
    }
}
